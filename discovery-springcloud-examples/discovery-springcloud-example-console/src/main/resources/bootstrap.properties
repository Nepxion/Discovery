# Spring cloud config

# Eureka config for discovery
eureka.client.serviceUrl.defaultZone=http://localhost:9528/eureka/
eureka.instance.preferIpAddress=true

# Consul config for discovery
spring.cloud.consul.host=localhost
spring.cloud.consul.port=8500
spring.cloud.consul.discovery.preferIpAddress=true

# Zookeeper config for discovery
spring.cloud.zookeeper.connectString=localhost:2181
spring.cloud.zookeeper.discovery.instancePort=${server.port}
spring.cloud.zookeeper.discovery.root=/spring-cloud
spring.cloud.zookeeper.discovery.preferIpAddress=true

# Nacos config for discovery
spring.cloud.nacos.discovery.server-addr=localhost:8848
# spring.cloud.nacos.discovery.namespace=discovery

# Ribbon config
ribbon.ServerListRefreshInterval=5000
ribbon.ConnectTimeout=60000
ribbon.ReadTimeout=60000
ribbon.maxAutoRetries=3
ribbon.maxAutoRetriesNextServer=3
ribbon.okToRetryOnAllOperations=true

# Apollo config for rule
apollo.portal-url=http://106.54.227.205:80
apollo.token=93af480ee2dd57af856c972ce55a42cbe08c2f12
apollo.operator=apollo
# apollo.connect-timeout=1000
# apollo.read-timeout=5000
apollo.app.id=discovery
apollo.env=DEV
# apollo.cluster=default
# apollo.namespace=application

# Nacos config for rule
nacos.server-addr=localhost:8848
# nacos.access-key=
# nacos.secret-key=
# nacos.username=
# nacos.password=
# nacos.namespace=application
# nacos.cluster-name=
# nacos.context-path=
# nacos.config-long-poll-timeout=
# nacos.config-retry-time=
# nacos.max-retry=
# nacos.endpoint=
# nacos.endpoint-port=
# nacos.is-use-endpoint-parsing-rule=
# nacos.is-use-cloud-namespace-parsing=
# nacos.encode=
# nacos.naming-load-cache-at-start=
# nacos.naming-client-beat-thread-count=
# nacos.naming-polling-thread-count=
# nacos.naming-request-domain-max-retry-count=
# nacos.naming-push-empty-protection=
# nacos.ram-role-name=
# nacos.timout=

# Redis config for rule
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password=
spring.redis.database=0

# Zookeeper config for rule
zookeeper.connect-string=localhost:2181
zookeeper.retry-count=3
zookeeper.sleep-time=3000

# Consul config for rule
consul.host=localhost
consul.port=8500
consul.timeout=1
consul.token=

# Etcd config for rule
etcd.server.addr=http://localhost:2379
etcd.username=
etcd.password=

# Management config
# 该项只对Consul有效，而且必须配置在bootstrap.properties里，配置在application.properties无效
# management.health.consul.enabled=true
management.endpoints.web.exposure.include=*
management.endpoints.jmx.exposure.include=*
management.endpoint.health.show-details=ALWAYS

# Spring boot admin config
spring.boot.admin.client.instance.prefer-ip=true
spring.boot.admin.client.url=http://localhost:9728

# User config
admin=admin
nepxion=nepxion

# 启动和关闭服务相关操作端点。缺失则默认为true
# spring.application.console.service.endpoint.enabled=true
# 启动和关闭配置相关操作端点。缺失则默认为true
# spring.application.console.config.endpoint.enabled=true
# 启动和关闭版本相关操作端点。缺失则默认为true
# spring.application.console.version.endpoint.enabled=true
# 启动和关闭侦测相关操作端点。缺失则默认为true
# spring.application.console.inspector.endpoint.enabled=true
# 启动和关闭网关路由相关操作端点。缺失则默认为true
# spring.application.console.route.endpoint.enabled=true
# 启动和关闭策略相关操作端点。缺失则默认为true
# spring.application.console.strategy.endpoint.enabled=true
# 启动和关闭Sentinel相关操作端点。缺失则默认为true
# spring.application.console.sentinel.endpoint.enabled=true
# 启动和关闭无损下线黑名单相关操作端点。缺失则默认为true
# spring.application.console.blacklist.endpoint.enabled=true
# 启动和关闭故障转移相关操作端点。缺失则默认为true
# spring.application.console.failover.endpoint.enabled=true
# 启动和关闭认证相关操作端点。缺失则默认为true
# spring.application.console.authentication.endpoint.enabled=true
# 启动和关闭策略操作端点的验证SPEL表达式方法。缺失则默认为true
# 该端点方法使用Spring StandardEvaluationContext类，StandardEvaluationContext支持全部的Spel语法且功能齐全，但GitHub Security报告其存在一定的注入风险，推荐使用SimpleEvaluationContext，而SimpleEvaluationContext并不能满足当前框架的需求
# 如果未使用验证SPEL表达式方法，可以通过下面开关关闭在方法在策略端点上的暴露，规避风险
# spring.application.console.strategy.endpoint.validate-expression.enabled=true

# 启动和关闭Swagger。缺失则默认为true
# swagger.enabled=true
# 业务服务Swagger Docket组名
# swagger.service.group=Your group
# 业务服务Swagger扫描目录
# swagger.service.packages=your-package1;your-package2
# 业务服务Swagger描述
# swagger.service.description=Your service Restful APIs
# 业务服务Swagger版本
# swagger.service.version=1.0.0
# 业务服务Swagger License名称
# swagger.service.license.name=Apache License 2.0
# 业务服务Swagger License链接
# swagger.service.license.url=http://www.apache.org/licenses/LICENSE-2.0
# 业务服务Swagger联系人名称
# swagger.service.contact.name=Nepxion
# 业务服务Swagger联系人网址
# swagger.service.contact.url=https://github.com/Nepxion/Discovery
# 业务服务Swagger联系人邮件
# swagger.service.contact.email=1394997@qq.com
# 业务服务Swagger服务条件网址
# swagger.service.termsOfService.url=http://nepxion.com/discovery